# This workflow will deploy a package to both GitHub Packages and to the Maven 
# Central Repository. Though it could be setup to be triggered on a GitHub release 
# create, for now it is instead started without a trigger. When I am satisfied the 
# artifacts are being correctly signed and published I will add a trigger.
name: Deploy
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Deployment to GitHub and Maven Central Repository'
jobs:
  build:
    name: Publish 
    runs-on: ubuntu-latest
    # Permissions are needed to read the artifacts and write the package
    permissions: 
      contents: read
      packages: write 
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'maven'
          server-id: github
          gpg-private-key: ${{ secrets.GPG_JAR_KEY }} 
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      # Dump the generated settings file so I can be sure the credentials 
      # are being used in the right way, and not visible
      - name: Dump Settings
        run: |
          cat /home/runner/.m2/settings.xml
      # Deploy to GitHub packages
      - name: Deploy to GitHub Packages
        run: | 
          mvn -B -Dgpg.passphrase=${{ secrets.GPG_JAR_PASSWORD }} -P github deploy 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_JAR_PASSWORD }}
      # Deploy to the Maven Central Repository
      #- name: Set up JDK 11
      #  uses: actions/setup-java@v2
      #  with:
      #    distribution: 'zulu'
      #    java-version: 11
      #    cache: 'maven'
      #    server-id: ossrh
      #    server-username: MAVEN_USERNAME 
      #    server-password: MAVEN_PASSWORD 
      #    gpg-private-key: ${{ secrets.GPG_JAR_KEY }} 
      #    gpg-passphrase: MAVEN_GPG_PASSPHRASE
      # Dump the generated settings file so I can be sure the credentials 
      # are being used in the right way, and not visible
      #- name: Dump Settings
      #  run: |
      #    cat /home/runner/.m2/settings.xml
      # Deploy to the Maven Central Repository
      #- name: Deploy to the Maven Central Repository
      #  run: | 
      #    mvn -B -Dgpg.passphrase=${{ secrets.GPG_JAR_PASSWORD }} -P ossrh deploy 
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      #    MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      #    MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_JAR_PASSWORD }}


